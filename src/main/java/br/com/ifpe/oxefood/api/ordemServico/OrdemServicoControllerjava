package br.com.ifpe.oxefood.api.ordemServico;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.ifpe.oxefood.modelo.ordemServico.OrdemServico;
import br.com.ifpe.oxefood.modelo.ordemServico.OrdemServicoService;

@RestController
@RequestMapping("/api/ordemServico")
@CrossOrigin
public class OrdemServicoController {

    @Autowired
    private OrdemServicoService OrdemServicoService;

    @PostMapping
    public ResponseEntity<OrdemServico> save(@RequestBody OrdemServicorRequest request) {
        OrdemServico ordemServico = ordemServicoService.save(request.build());
        return ResponseEntity.status(HttpStatus.CREATED).bodyOrdemServico);
    }

    @PutMapping("/{id}")
    public ResponseEntity<OrdemServico> update(@PathVariable Long id, @RequestBody OrdemServicoRequest request) {
        OrdemServicor OrdemServicoAlterado = request.build();

        OrdemServico OrdemServico = OrdemServicoService.findById(id)
                .orElseThrow(() -> new RuntimeException("OrdemServico n√£o encontrado"));

                OrdemServico.setNumero(OrdemServicoAlterado.getNumero());
                OrdemServico.setPecasUtilizadas(OrdemServicoAlterado.getPecasUtilizadas());
                OrdemServico.setServicosEfetuados(OrdemServicoAlterado.getServicosEfetuados());
                OrdemServico.setDataServico(OrdemServicoAlterado.getDataServico());
                OrdemServico.setCliente(entregadorAlterado.getCliente());
                OrdemServico.setValorServico(OrdemServicoAlterado.getValorServico());
        
    
    ordemServico.setAtivo(Alterado.getAtivo());

    ordemServicoService.update(OrdemServicor);
        return ResponseEntity.okOrdemServico);
    }
}
